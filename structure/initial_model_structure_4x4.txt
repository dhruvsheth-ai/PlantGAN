--------------------------------------------------
Sequences in Dataset:  51 , Batch size:  32
Global iteration step:  0 , Epoch:  0
Phase:  init
Number of Generator`s model parameters: 
17307139
Number of Discriminator`s model parameters: 
57426945
--------------------------------------------------
Generator structure: 
FutureGenerator(
  (model): Sequential(
    (from_rgb_block): Sequential(
      (0): EqualizedConv3d(
        (conv): Conv3d(3, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      )
      (1): LeakyReLU(0.2)
      (2): PixelwiseNormLayer(
      )
    )
    (middle_block): Sequential(
      (0): EqualizedConv3d(
        (conv): Conv3d(512, 512, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (1): LeakyReLU(0.2)
      (2): PixelwiseNormLayer(
      )
      (3): EqualizedConv3d(
        (conv): Conv3d(512, 512, kernel_size=(6, 1, 1), stride=(1, 1, 1), bias=False)
      )
      (4): LeakyReLU(0.2)
      (5): PixelwiseNormLayer(
      )
      (6): EqualizedConvTranspose3d(
        (deconv): ConvTranspose3d(512, 512, kernel_size=(6, 1, 1), stride=(1, 1, 1), bias=False)
      )
      (7): LeakyReLU(0.2)
      (8): PixelwiseNormLayer(
      )
      (9): EqualizedConv3d(
        (conv): Conv3d(512, 512, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (10): LeakyReLU(0.2)
      (11): PixelwiseNormLayer(
      )
    )
    (to_rgb_block): Sequential(
      (0): EqualizedConv3d(
        (conv): Conv3d(512, 3, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      )
    )
  )
)
--------------------------------------------------
Discriminator structure: 
Discriminator(
  (model): Sequential(
    (from_rgb_block): Sequential(
      (0): EqualizedConv3d(
        (conv): Conv3d(3, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      )
      (1): LeakyReLU(0.2)
    )
    (last_block): Sequential(
      (0): MinibatchStdConcatLayer(averaging = all)
      (1): EqualizedConv3d(
        (conv): Conv3d(513, 512, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      )
      (2): LeakyReLU(0.2)
      (3): EqualizedConv3d(
        (conv): Conv3d(512, 512, kernel_size=(12, 4, 4), stride=(1, 1, 1), bias=False)
      )
      (4): LeakyReLU(0.2)
      (5): Flatten(
      )
      (6): EqualizedLinear(
        (linear): Linear(in_features=512, out_features=1, bias=False)
      )
    )
  )
)
--------------------------------------------------
